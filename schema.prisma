datasource db {
  provider = "postgres"

  // .envファイルからデータベースURLを読み込み
  url = env("DATABASE_URL")
}
 
generator db {
  provider = "go run github.com/steebchen/prisma-client-go"
}
 
// 各テーブルについての詳細は、handlers/TablesやTableMemoを参照
// Order(注文)テーブル
model Order {
  id String @id @default(uuid())
  customer_id Int
  stock_id Int
  start DateTime? @db.Timestamptz(0)
  end DateTime? @db.Timestamptz(0)
  num Int
  seat Int[]
  state Int
  note String?
  time DateTime @db.Timestamptz(6) @default(now())

  // duration Duration?
}

// Stock(在庫)テーブル
model Stock {
  id Int @id @default(autoincrement())
  product_id Int
  start DateTime? @db.Timestamptz(0)
  end DateTime? @db.Timestamptz(0)
  num Int
  state Boolean @default(false)

  product Product @relation(fields: [product_id], references: [id])
}

// Product(商品)テーブル
model Product {
  id Int @id @default(autoincrement())
  category String
  name String @unique
  value Int
  num Int
  interval String @default("0m")
  note String?

  stock Stock[]
}

// Duration(予約期間)テーブル
model Duration {
  id Int @id @default(autoincrement())
  order_id Int
  start DateTime @db.Timestamptz(0)
  end DateTime @db.Timestamptz(0)
  // state Int

  // order Order @relation(fields: [order_id], references: [id])
}

// Fee(料金)テーブル
model Fee {
  id Int @id @default(autoincrement())
  value Int
  tax Int
  discount Int
  additional Int
  sum Int
}

// Payment(決済処理)テーブル
model Payment {
  id Int @id @default(autoincrement())
  order Int @unique
  value Int
  how String
  state Int
}

// Customer(顧客情報)テーブル
model Customer {
  id Int @id @default(autoincrement())
  name String
  phone String
  mail String
  address String
  payment String
}

// EditInfo(テーブル編集用)テーブル
model EditInfo {
  id Int @id @default(autoincrement())
  table String
  type Int
  info Json
  time DateTime @db.Timestamptz()
}