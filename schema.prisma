datasource db {
  provider = "postgres"

  // .envファイルからデータベースURLを読み込み
  url = env("DATABASE_URL")
}
 
generator db {
  provider = "go run github.com/steebchen/prisma-client-go"
}
 
// 各テーブルについての詳細は、handlers/TablesやTableMemoを参照
// Shop(店)テーブル
model Shop {
  id Int @id @default(autoincrement())
  name String @unique
  mail String
  phone String
  address String

  product_group ProductGroup[]
}

// ProductGroup(商品グループ)テーブル
model ProductGroup {
  id Int @id @default(autoincrement())
  shop_id Int
  name String
  start_before Int @default(24)
  available_duration Int @default(72)
  unit_time Int?
  max_time Int?
  interval Int?

  shop Shop @relation(fields: [shop_id], references: [id])
  product Product[]

  @@unique([shop_id, name])
}

// Product(商品)テーブル
model Product {
  id Int @id @default(autoincrement())
  group_id Int
  name String
  max_people Int?
  qty Int?
  remark String?

  group ProductGroup @relation(fields: [group_id], references: [id])
  price Price[]
  seat Seat[]

  @@unique([group_id, name])
}

// Price(値段)テーブル
model Price {
  id Int @id @default(autoincrement())
  product_id Int
  name String
  value Int
  tax Int
  remark String?

  product Product @relation(fields: [product_id], references: [id])
  stock Stock[]

  @@unique([product_id, name])
}

// Seat(座席)テーブル
model Seat {
  id Int @id @default(autoincrement())
  product_id Int
  row String
  column String
  is_enable Boolean @default(false)
  remark String?

  product Product @relation(fields: [product_id], references: [id])
  order_detail OrderDetail[]
  reserved_seat ReservedSeat[]

  @@unique([product_id, row, column])
}

// Stock(在庫)テーブル

model Stock {
  id Int @id @default(autoincrement())
  price_id Int
  name String
  qty Int?
  start_at DateTime? @db.Timestamptz(0)
  end_at DateTime? @db.Timestamptz(0)
  is_enable Boolean @default(false)

  price Price @relation(fields: [price_id], references: [id])
  order_detail OrderDetail[]
  reserved_seat ReservedSeat[]

  @@unique([price_id, name])
}

// Customer(顧客情報)テーブル
model Customer {
  id Int @id @default(autoincrement())
  name String
  mail String
  phone String
  address String?
  payment_info String?

  order Order[]
}

// Order(注文)テーブル
model Order {
  id Int @id @default(autoincrement())
  customer_id Int
  start_at DateTime? @db.Timestamptz(0)
  end_at DateTime? @db.Timestamptz(0)
  is_accepted Boolean
  is_pending Boolean
  created_at DateTime @db.Timestamptz(3) @default(now())
  remark String?

  customer Customer @relation(fields: [customer_id], references: [id])
  payment_state PaymentState[]
  reservation_cancel ReservationCancel?
  reservation_end ReservationEnd?
  order_detail OrderDetail[]
}

model OrderDetail {
  id Int @id @default(autoincrement())
  order_id Int
  stock_id Int
  seat_id Int?
  number_people Int? @default(0)
  qty Int?

  order Order @relation(fields: [order_id], references: [id])
  stock Stock @relation(fields: [stock_id], references: [id])
  seat Seat? @relation(fields: [seat_id], references: [id])
}

// PaymentState(決済状態)テーブル
model PaymentState {
  id Int @id @default(autoincrement())
  order_id Int
  is_accepted Boolean
  message String
  created_at DateTime @db.Timestamptz(3) @default(now())

  order Order @relation(fields: [order_id], references: [id])
}

// ReservationCancel(予約キャンセル)テーブル
model ReservationCancel {
  id Int @id @default(autoincrement())
  order_id Int @unique
  is_accepted Boolean
  created_at DateTime @db.Timestamptz(3) @default(now())

  order Order @relation(fields: [order_id], references: [id])
}

// ReservationEnd(予約終了)テーブル
model ReservationEnd {
  id Int @id @default(autoincrement())
  order_id Int @unique
  is_accepted Boolean
  created_at DateTime @db.Timestamptz(3) @default(now())

  order Order @relation(fields: [order_id], references: [id])
}

model ReservedSeat {
  id Int @id @default(autoincrement())
  stock_id Int
  seat_id Int

  stock Stock @relation(fields: [stock_id], references: [id])
  seat Seat @relation(fields: [seat_id], references: [id])
}

// EditInfo(テーブル編集履歴)テーブル
model EditInfo {
  id Int @id @default(autoincrement())
  table String
  type Int
  info Json
  time DateTime @db.Timestamptz()
}